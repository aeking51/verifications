{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Users = exports.UserSearchIterator = void 0;\nvar _shared = require(\"../shared\");\n\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n// ENDMANUAL(SearchUsersQueryOperand)\n// MANUAL(UserSearchIterator)(FREE_FUNCTION)\nvar mode;\n(function (mode) {\n  mode[mode[\"pending\"] = 0] = \"pending\";\n  mode[mode[\"inProgress\"] = 1] = \"inProgress\";\n  mode[mode[\"complete\"] = 2] = \"complete\";\n})(mode || (mode = {}));\nclass UserSearchIterator {\n  constructor(client, data) {\n    this.client = client;\n    this.data = data;\n    this.mode = mode.pending;\n  }\n  async next() {\n    const res = await this.client.search(this.data);\n    this.data = {\n      ...this.data,\n      cursor: res.results_metadata.next_cursor\n    };\n    if (!this.data.cursor) {\n      this.mode = mode.complete;\n    } else {\n      this.mode = mode.inProgress;\n    }\n    return res.results;\n  }\n  hasNext() {\n    return this.mode !== mode.complete;\n  }\n  async *[Symbol.asyncIterator]() {\n    while (this.hasNext()) {\n      yield this.next();\n    }\n  }\n} // ENDMANUAL(UserSearchIterator)\n\nexports.UserSearchIterator = UserSearchIterator;\nclass Users {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n  }\n  /**\n   * Add a User to Stytch. A `user_id` is returned in the response that can then be used to perform other\n   * operations within Stytch. An `email` or a `phone_number` is required.\n   * @param data {@link UsersCreateRequest}\n   * @returns {@link UsersCreateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n  create(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/users`,\n      data\n    });\n  }\n  /**\n   * Get information about a specific User.\n   * @param data {@link UsersGetRequest}\n   * @returns {@link UsersGetResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n  get(params) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"GET\",\n      url: `/v1/users/${params.user_id}`,\n      params: {}\n    });\n  }\n  /**\n   * Search for Users within your Stytch Project. Submit an empty `query` in the request to return all Users.\n   * @param data {@link UsersSearchRequest}\n   * @returns {@link UsersSearchResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n  search(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/users/search`,\n      data\n    });\n  }\n  /**\n   * Update a User's attributes.\n   *\n   * **Note:** In order to add a new email address or phone number to an existing User object, pass the new\n   * email address or phone number into the respective `/send` endpoint for the authentication method of your\n   * choice. If you specify the existing User's `user_id` while calling the `/send` endpoint, the new,\n   * unverified email address or phone number will be added to the existing User object. Upon successful\n   * authentication, the email address or phone number will be marked as verified. We require this process to\n   * guard against an account takeover vulnerability.\n   * @param data {@link UsersUpdateRequest}\n   * @returns {@link UsersUpdateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n  update(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"PUT\",\n      url: `/v1/users/${data.user_id}`,\n      data: {\n        name: data.name,\n        attributes: data.attributes,\n        trusted_metadata: data.trusted_metadata,\n        untrusted_metadata: data.untrusted_metadata\n      }\n    });\n  }\n  /**\n   * Exchange a user's email address or phone number for another.\n   *\n   * Must pass either an `email_address` or a `phone_number`.\n   *\n   * This endpoint only works if the user has exactly one factor. You are able to exchange the type of factor\n   * for another as well, i.e. exchange an `email_address` for a `phone_number`.\n   *\n   * Use this endpoint with caution as it performs an admin level action.\n   * @param data {@link UsersExchangePrimaryFactorRequest}\n   * @returns {@link UsersExchangePrimaryFactorResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n  exchangePrimaryFactor(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"PUT\",\n      url: `/v1/users/${data.user_id}/exchange_primary_factor`,\n      data: {\n        email_address: data.email_address,\n        phone_number: data.phone_number\n      }\n    });\n  }\n  /**\n   * Delete a User from Stytch.\n   * @param data {@link UsersDeleteRequest}\n   * @returns {@link UsersDeleteResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n  delete(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"DELETE\",\n      url: `/v1/users/${data.user_id}`,\n      data: {}\n    });\n  }\n  /**\n   * Delete an email from a User.\n   * @param data {@link UsersDeleteEmailRequest}\n   * @returns {@link UsersDeleteEmailResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n  deleteEmail(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"DELETE\",\n      url: `/v1/users/emails/${data.email_id}`,\n      data: {}\n    });\n  }\n  /**\n   * Delete a phone number from a User.\n   * @param data {@link UsersDeletePhoneNumberRequest}\n   * @returns {@link UsersDeletePhoneNumberResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n  deletePhoneNumber(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"DELETE\",\n      url: `/v1/users/phone_numbers/${data.phone_id}`,\n      data: {}\n    });\n  }\n  /**\n   * Delete a WebAuthn registration from a User.\n   * @param data {@link UsersDeleteWebAuthnRegistrationRequest}\n   * @returns {@link UsersDeleteWebAuthnRegistrationResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n  deleteWebAuthnRegistration(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"DELETE\",\n      url: `/v1/users/webauthn_registrations/${data.webauthn_registration_id}`,\n      data: {}\n    });\n  }\n  /**\n   * Delete a biometric registration from a User.\n   * @param data {@link UsersDeleteBiometricRegistrationRequest}\n   * @returns {@link UsersDeleteBiometricRegistrationResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n  deleteBiometricRegistration(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"DELETE\",\n      url: `/v1/users/biometric_registrations/${data.biometric_registration_id}`,\n      data: {}\n    });\n  }\n  /**\n   * Delete a TOTP from a User.\n   * @param data {@link UsersDeleteTOTPRequest}\n   * @returns {@link UsersDeleteTOTPResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n  deleteTOTP(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"DELETE\",\n      url: `/v1/users/totps/${data.totp_id}`,\n      data: {}\n    });\n  }\n  /**\n   * Delete a crypto wallet from a User.\n   * @param data {@link UsersDeleteCryptoWalletRequest}\n   * @returns {@link UsersDeleteCryptoWalletResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n  deleteCryptoWallet(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"DELETE\",\n      url: `/v1/users/crypto_wallets/${data.crypto_wallet_id}`,\n      data: {}\n    });\n  }\n  /**\n   * Delete a password from a User.\n   * @param data {@link UsersDeletePasswordRequest}\n   * @returns {@link UsersDeletePasswordResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n  deletePassword(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"DELETE\",\n      url: `/v1/users/passwords/${data.password_id}`,\n      data: {}\n    });\n  }\n  /**\n   * Delete an OAuth registration from a User.\n   * @param data {@link UsersDeleteOAuthRegistrationRequest}\n   * @returns {@link UsersDeleteOAuthRegistrationResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n  deleteOAuthRegistration(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"DELETE\",\n      url: `/v1/users/oauth/${data.oauth_user_registration_id}`,\n      data: {}\n    });\n  } // MANUAL(searchAll)(SERVICE_METHOD)\n  // Return an iterator over all search results.  Submit an empty `query` in the request to return all Users.\n\n  searchAll(data) {\n    return new UserSearchIterator(this, data);\n  } // ENDMANUAL(searchAll)\n}\n\nexports.Users = Users;","map":{"version":3,"names":["Object","defineProperty","exports","value","Users","UserSearchIterator","_shared","require","mode","constructor","client","data","pending","next","res","search","cursor","results_metadata","next_cursor","complete","inProgress","results","hasNext","Symbol","asyncIterator","fetchConfig","create","request","method","url","get","params","user_id","update","name","attributes","trusted_metadata","untrusted_metadata","exchangePrimaryFactor","email_address","phone_number","delete","deleteEmail","email_id","deletePhoneNumber","phone_id","deleteWebAuthnRegistration","webauthn_registration_id","deleteBiometricRegistration","biometric_registration_id","deleteTOTP","totp_id","deleteCryptoWallet","crypto_wallet_id","deletePassword","password_id","deleteOAuthRegistration","oauth_user_registration_id","searchAll"],"sources":["D:/code/Techfriar/week5-task/verifications/node_modules/stytch/dist/b2c/users.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Users = exports.UserSearchIterator = void 0;\n\nvar _shared = require(\"../shared\");\n\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n// ENDMANUAL(SearchUsersQueryOperand)\n// MANUAL(UserSearchIterator)(FREE_FUNCTION)\nvar mode;\n\n(function (mode) {\n  mode[mode[\"pending\"] = 0] = \"pending\";\n  mode[mode[\"inProgress\"] = 1] = \"inProgress\";\n  mode[mode[\"complete\"] = 2] = \"complete\";\n})(mode || (mode = {}));\n\nclass UserSearchIterator {\n  constructor(client, data) {\n    this.client = client;\n    this.data = data;\n    this.mode = mode.pending;\n  }\n\n  async next() {\n    const res = await this.client.search(this.data);\n    this.data = { ...this.data,\n      cursor: res.results_metadata.next_cursor\n    };\n\n    if (!this.data.cursor) {\n      this.mode = mode.complete;\n    } else {\n      this.mode = mode.inProgress;\n    }\n\n    return res.results;\n  }\n\n  hasNext() {\n    return this.mode !== mode.complete;\n  }\n\n  async *[Symbol.asyncIterator]() {\n    while (this.hasNext()) {\n      yield this.next();\n    }\n  }\n\n} // ENDMANUAL(UserSearchIterator)\n\n\nexports.UserSearchIterator = UserSearchIterator;\n\nclass Users {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n  }\n  /**\n   * Add a User to Stytch. A `user_id` is returned in the response that can then be used to perform other\n   * operations within Stytch. An `email` or a `phone_number` is required.\n   * @param data {@link UsersCreateRequest}\n   * @returns {@link UsersCreateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n\n  create(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/users`,\n      data\n    });\n  }\n  /**\n   * Get information about a specific User.\n   * @param data {@link UsersGetRequest}\n   * @returns {@link UsersGetResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n\n  get(params) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"GET\",\n      url: `/v1/users/${params.user_id}`,\n      params: {}\n    });\n  }\n  /**\n   * Search for Users within your Stytch Project. Submit an empty `query` in the request to return all Users.\n   * @param data {@link UsersSearchRequest}\n   * @returns {@link UsersSearchResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n\n  search(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/users/search`,\n      data\n    });\n  }\n  /**\n   * Update a User's attributes.\n   *\n   * **Note:** In order to add a new email address or phone number to an existing User object, pass the new\n   * email address or phone number into the respective `/send` endpoint for the authentication method of your\n   * choice. If you specify the existing User's `user_id` while calling the `/send` endpoint, the new,\n   * unverified email address or phone number will be added to the existing User object. Upon successful\n   * authentication, the email address or phone number will be marked as verified. We require this process to\n   * guard against an account takeover vulnerability.\n   * @param data {@link UsersUpdateRequest}\n   * @returns {@link UsersUpdateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n\n  update(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"PUT\",\n      url: `/v1/users/${data.user_id}`,\n      data: {\n        name: data.name,\n        attributes: data.attributes,\n        trusted_metadata: data.trusted_metadata,\n        untrusted_metadata: data.untrusted_metadata\n      }\n    });\n  }\n  /**\n   * Exchange a user's email address or phone number for another.\n   *\n   * Must pass either an `email_address` or a `phone_number`.\n   *\n   * This endpoint only works if the user has exactly one factor. You are able to exchange the type of factor\n   * for another as well, i.e. exchange an `email_address` for a `phone_number`.\n   *\n   * Use this endpoint with caution as it performs an admin level action.\n   * @param data {@link UsersExchangePrimaryFactorRequest}\n   * @returns {@link UsersExchangePrimaryFactorResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n\n  exchangePrimaryFactor(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"PUT\",\n      url: `/v1/users/${data.user_id}/exchange_primary_factor`,\n      data: {\n        email_address: data.email_address,\n        phone_number: data.phone_number\n      }\n    });\n  }\n  /**\n   * Delete a User from Stytch.\n   * @param data {@link UsersDeleteRequest}\n   * @returns {@link UsersDeleteResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n\n  delete(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"DELETE\",\n      url: `/v1/users/${data.user_id}`,\n      data: {}\n    });\n  }\n  /**\n   * Delete an email from a User.\n   * @param data {@link UsersDeleteEmailRequest}\n   * @returns {@link UsersDeleteEmailResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n\n  deleteEmail(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"DELETE\",\n      url: `/v1/users/emails/${data.email_id}`,\n      data: {}\n    });\n  }\n  /**\n   * Delete a phone number from a User.\n   * @param data {@link UsersDeletePhoneNumberRequest}\n   * @returns {@link UsersDeletePhoneNumberResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n\n  deletePhoneNumber(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"DELETE\",\n      url: `/v1/users/phone_numbers/${data.phone_id}`,\n      data: {}\n    });\n  }\n  /**\n   * Delete a WebAuthn registration from a User.\n   * @param data {@link UsersDeleteWebAuthnRegistrationRequest}\n   * @returns {@link UsersDeleteWebAuthnRegistrationResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n\n  deleteWebAuthnRegistration(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"DELETE\",\n      url: `/v1/users/webauthn_registrations/${data.webauthn_registration_id}`,\n      data: {}\n    });\n  }\n  /**\n   * Delete a biometric registration from a User.\n   * @param data {@link UsersDeleteBiometricRegistrationRequest}\n   * @returns {@link UsersDeleteBiometricRegistrationResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n\n  deleteBiometricRegistration(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"DELETE\",\n      url: `/v1/users/biometric_registrations/${data.biometric_registration_id}`,\n      data: {}\n    });\n  }\n  /**\n   * Delete a TOTP from a User.\n   * @param data {@link UsersDeleteTOTPRequest}\n   * @returns {@link UsersDeleteTOTPResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n\n  deleteTOTP(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"DELETE\",\n      url: `/v1/users/totps/${data.totp_id}`,\n      data: {}\n    });\n  }\n  /**\n   * Delete a crypto wallet from a User.\n   * @param data {@link UsersDeleteCryptoWalletRequest}\n   * @returns {@link UsersDeleteCryptoWalletResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n\n  deleteCryptoWallet(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"DELETE\",\n      url: `/v1/users/crypto_wallets/${data.crypto_wallet_id}`,\n      data: {}\n    });\n  }\n  /**\n   * Delete a password from a User.\n   * @param data {@link UsersDeletePasswordRequest}\n   * @returns {@link UsersDeletePasswordResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n\n  deletePassword(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"DELETE\",\n      url: `/v1/users/passwords/${data.password_id}`,\n      data: {}\n    });\n  }\n  /**\n   * Delete an OAuth registration from a User.\n   * @param data {@link UsersDeleteOAuthRegistrationRequest}\n   * @returns {@link UsersDeleteOAuthRegistrationResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n\n  deleteOAuthRegistration(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"DELETE\",\n      url: `/v1/users/oauth/${data.oauth_user_registration_id}`,\n      data: {}\n    });\n  } // MANUAL(searchAll)(SERVICE_METHOD)\n  // Return an iterator over all search results.  Submit an empty `query` in the request to return all Users.\n\n\n  searchAll(data) {\n    return new UserSearchIterator(this, data);\n  } // ENDMANUAL(searchAll)\n\n\n}\n\nexports.Users = Users;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}