{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WebAuthn = void 0;\nvar _shared = require(\"../shared\");\n\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\nclass WebAuthn {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n  }\n  /**\n   * Initiate the process of creating a new WebAuthn registration. After calling this endpoint, the browser\n   * will need to call\n   * [navigator.credentials.create()](https://www.w3.org/TR/webauthn-2/#sctn-createCredential) with the data\n   * from\n   * [public_key_credential_creation_options](https://w3c.github.io/webauthn/#dictionary-makecredentialoptions)\n   * passed to the [navigator.credentials.create()](https://www.w3.org/TR/webauthn-2/#sctn-createCredential)\n   * request via the public key argument. We recommend using the `create()` wrapper provided by the\n   * webauthn-json library.\n   *\n   * If you are not using the [webauthn-json](https://github.com/github/webauthn-json) library, the\n   * `public_key_credential_creation_options` will need to be converted to a suitable public key by\n   * unmarshalling the JSON, base64 decoding the user ID field, and converting user ID and the challenge\n   * fields into an array buffer.\n   * @param data {@link WebAuthnRegisterStartRequest}\n   * @returns {@link WebAuthnRegisterStartResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n  registerStart(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/webauthn/register/start`,\n      data\n    });\n  }\n  /**\n   * Complete the creation of a WebAuthn registration by passing the response from the\n   * [navigator.credentials.create()](https://www.w3.org/TR/webauthn-2/#sctn-createCredential) request to\n   * this endpoint as the `public_key_credential` parameter.\n   *\n   * If the [webauthn-json](https://github.com/github/webauthn-json) library's `create()` method was used,\n   * the response can be passed directly to the\n   * [register endpoint](https://stytch.com/docs/api/webauthn-register). If not, some fields (the client data\n   * and the attestation object) from the\n   * [navigator.credentials.create()](https://www.w3.org/TR/webauthn-2/#sctn-createCredential) response will\n   * need to be converted from array buffers to strings and marshalled into JSON.\n   * @param data {@link WebAuthnRegisterRequest}\n   * @returns {@link WebAuthnRegisterResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n  register(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/webauthn/register`,\n      data\n    });\n  }\n  /**\n   * Initiate the authentication of a WebAuthn registration. After calling this endpoint, the browser will\n   * need to call [navigator.credentials.get()](https://www.w3.org/TR/webauthn-2/#sctn-getAssertion) with the\n   * data from `public_key_credential_request_options` passed to the\n   * [navigator.credentials.get()](https://www.w3.org/TR/webauthn-2/#sctn-getAssertion) request via the\n   * public key argument. We recommend using the `get()` wrapper provided by the webauthn-json library.\n   *\n   * If you are not using the [webauthn-json](https://github.com/github/webauthn-json) library, `the\n   * public_key_credential_request_options` will need to be converted to a suitable public key by\n   * unmarshalling the JSON and converting some the fields to array buffers.\n   * @param data {@link WebAuthnAuthenticateStartRequest}\n   * @returns {@link WebAuthnAuthenticateStartResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n  authenticateStart(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/webauthn/authenticate/start`,\n      data\n    });\n  }\n  /**\n   * Complete the authentication of a WebAuthn registration by passing the response from the\n   * [navigator.credentials.get()](https://www.w3.org/TR/webauthn-2/#sctn-getAssertion) request to the\n   * authenticate endpoint.\n   *\n   * If the [webauthn-json](https://github.com/github/webauthn-json) library's `get()` method was used, the\n   * response can be passed directly to the\n   * [authenticate endpoint](https://stytch.com/docs/api/webauthn-authenticate). If not some fields from the\n   * [navigator.credentials.get()](https://www.w3.org/TR/webauthn-2/#sctn-getAssertion) response will need to\n   * be converted from array buffers to strings and marshalled into JSON.\n   * @param data {@link WebAuthnAuthenticateRequest}\n   * @returns {@link WebAuthnAuthenticateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n  authenticate(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/webauthn/authenticate`,\n      data\n    });\n  }\n}\nexports.WebAuthn = WebAuthn;","map":{"version":3,"names":["Object","defineProperty","exports","value","WebAuthn","_shared","require","constructor","fetchConfig","registerStart","data","request","method","url","register","authenticateStart","authenticate"],"sources":["D:/code/Techfriar/week5-task/verifications/node_modules/stytch/dist/b2c/webauthn.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WebAuthn = void 0;\n\nvar _shared = require(\"../shared\");\n\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\nclass WebAuthn {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n  }\n  /**\n   * Initiate the process of creating a new WebAuthn registration. After calling this endpoint, the browser\n   * will need to call\n   * [navigator.credentials.create()](https://www.w3.org/TR/webauthn-2/#sctn-createCredential) with the data\n   * from\n   * [public_key_credential_creation_options](https://w3c.github.io/webauthn/#dictionary-makecredentialoptions)\n   * passed to the [navigator.credentials.create()](https://www.w3.org/TR/webauthn-2/#sctn-createCredential)\n   * request via the public key argument. We recommend using the `create()` wrapper provided by the\n   * webauthn-json library.\n   *\n   * If you are not using the [webauthn-json](https://github.com/github/webauthn-json) library, the\n   * `public_key_credential_creation_options` will need to be converted to a suitable public key by\n   * unmarshalling the JSON, base64 decoding the user ID field, and converting user ID and the challenge\n   * fields into an array buffer.\n   * @param data {@link WebAuthnRegisterStartRequest}\n   * @returns {@link WebAuthnRegisterStartResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n\n  registerStart(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/webauthn/register/start`,\n      data\n    });\n  }\n  /**\n   * Complete the creation of a WebAuthn registration by passing the response from the\n   * [navigator.credentials.create()](https://www.w3.org/TR/webauthn-2/#sctn-createCredential) request to\n   * this endpoint as the `public_key_credential` parameter.\n   *\n   * If the [webauthn-json](https://github.com/github/webauthn-json) library's `create()` method was used,\n   * the response can be passed directly to the\n   * [register endpoint](https://stytch.com/docs/api/webauthn-register). If not, some fields (the client data\n   * and the attestation object) from the\n   * [navigator.credentials.create()](https://www.w3.org/TR/webauthn-2/#sctn-createCredential) response will\n   * need to be converted from array buffers to strings and marshalled into JSON.\n   * @param data {@link WebAuthnRegisterRequest}\n   * @returns {@link WebAuthnRegisterResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n\n  register(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/webauthn/register`,\n      data\n    });\n  }\n  /**\n   * Initiate the authentication of a WebAuthn registration. After calling this endpoint, the browser will\n   * need to call [navigator.credentials.get()](https://www.w3.org/TR/webauthn-2/#sctn-getAssertion) with the\n   * data from `public_key_credential_request_options` passed to the\n   * [navigator.credentials.get()](https://www.w3.org/TR/webauthn-2/#sctn-getAssertion) request via the\n   * public key argument. We recommend using the `get()` wrapper provided by the webauthn-json library.\n   *\n   * If you are not using the [webauthn-json](https://github.com/github/webauthn-json) library, `the\n   * public_key_credential_request_options` will need to be converted to a suitable public key by\n   * unmarshalling the JSON and converting some the fields to array buffers.\n   * @param data {@link WebAuthnAuthenticateStartRequest}\n   * @returns {@link WebAuthnAuthenticateStartResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n\n  authenticateStart(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/webauthn/authenticate/start`,\n      data\n    });\n  }\n  /**\n   * Complete the authentication of a WebAuthn registration by passing the response from the\n   * [navigator.credentials.get()](https://www.w3.org/TR/webauthn-2/#sctn-getAssertion) request to the\n   * authenticate endpoint.\n   *\n   * If the [webauthn-json](https://github.com/github/webauthn-json) library's `get()` method was used, the\n   * response can be passed directly to the\n   * [authenticate endpoint](https://stytch.com/docs/api/webauthn-authenticate). If not some fields from the\n   * [navigator.credentials.get()](https://www.w3.org/TR/webauthn-2/#sctn-getAssertion) response will need to\n   * be converted from array buffers to strings and marshalled into JSON.\n   * @param data {@link WebAuthnAuthenticateRequest}\n   * @returns {@link WebAuthnAuthenticateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n\n  authenticate(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/webauthn/authenticate`,\n      data\n    });\n  }\n\n}\n\nexports.WebAuthn = WebAuthn;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,QAAQ,GAAG,KAAK,CAAC;AAEzB,IAAIC,OAAO,GAAGC,OAAO,CAAC,WAAW,CAAC;;AAElC;AACA;AACA;AACA;AACA;AACA,MAAMF,QAAQ,CAAC;EACbG,WAAWA,CAACC,WAAW,EAAE;IACvB,IAAI,CAACA,WAAW,GAAGA,WAAW;EAChC;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGEC,aAAaA,CAACC,IAAI,EAAE;IAClB,OAAO,CAAC,CAAC,EAAEL,OAAO,CAACM,OAAO,EAAE,IAAI,CAACH,WAAW,EAAE;MAC5CI,MAAM,EAAE,MAAM;MACdC,GAAG,EAAG,6BAA4B;MAClCH;IACF,CAAC,CAAC;EACJ;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGEI,QAAQA,CAACJ,IAAI,EAAE;IACb,OAAO,CAAC,CAAC,EAAEL,OAAO,CAACM,OAAO,EAAE,IAAI,CAACH,WAAW,EAAE;MAC5CI,MAAM,EAAE,MAAM;MACdC,GAAG,EAAG,uBAAsB;MAC5BH;IACF,CAAC,CAAC;EACJ;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGEK,iBAAiBA,CAACL,IAAI,EAAE;IACtB,OAAO,CAAC,CAAC,EAAEL,OAAO,CAACM,OAAO,EAAE,IAAI,CAACH,WAAW,EAAE;MAC5CI,MAAM,EAAE,MAAM;MACdC,GAAG,EAAG,iCAAgC;MACtCH;IACF,CAAC,CAAC;EACJ;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGEM,YAAYA,CAACN,IAAI,EAAE;IACjB,OAAO,CAAC,CAAC,EAAEL,OAAO,CAACM,OAAO,EAAE,IAAI,CAACH,WAAW,EAAE;MAC5CI,MAAM,EAAE,MAAM;MACdC,GAAG,EAAG,2BAA0B;MAChCH;IACF,CAAC,CAAC;EACJ;AAEF;AAEAR,OAAO,CAACE,QAAQ,GAAGA,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}