{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Organizations = void 0;\nvar _organizations_members = require(\"./organizations_members\");\nvar _shared = require(\"../shared\");\n\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n// ENDMANUAL(SearchQueryOperand)\nclass Organizations {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n    this.members = new _organizations_members.Members(this.fetchConfig);\n  }\n  /**\n   * Creates an Organization. An `organization_name` and a unique `organization_slug` are required.\n   *\n   * By default, `email_invites` and `sso_jit_provisioning` will be set to `ALL_ALLOWED`, and `mfa_policy`\n   * will be set to `OPTIONAL` if no Organization authentication settings are explicitly defined in the\n   * request.\n   *\n   * *See the [Organization authentication settings](https://stytch.com/docs/b2b/api/org-auth-settings)\n   * resource to learn more about fields like `email_jit_provisioning`, `email_invites`,\n   * `sso_jit_provisioning`, etc., and their behaviors.\n   * @param data {@link B2BOrganizationsCreateRequest}\n   * @returns {@link B2BOrganizationsCreateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n  create(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/organizations`,\n      data\n    });\n  }\n  /**\n   * Returns an Organization specified by `organization_id`.\n   * @param data {@link B2BOrganizationsGetRequest}\n   * @returns {@link B2BOrganizationsGetResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n  get(params) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"GET\",\n      url: `/v1/b2b/organizations/${params.organization_id}`,\n      params: {}\n    });\n  }\n  /**\n   * Updates an Organization specified by `organization_id`. An Organization must always have at least one\n   * auth setting set to either `RESTRICTED` or `ALL_ALLOWED` in order to provision new Members. test\n   *\n   * *See the [Organization authentication settings](https://stytch.com/docs/b2b/api/org-auth-settings)\n   * resource to learn more about fields like `email_jit_provisioning`, `email_invites`,\n   * `sso_jit_provisioning`, etc., and their behaviors.\n   * @param data {@link B2BOrganizationsUpdateRequest}\n   * @returns {@link B2BOrganizationsUpdateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n  update(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"PUT\",\n      url: `/v1/b2b/organizations/${data.organization_id}`,\n      data: {\n        organization_name: data.organization_name,\n        organization_slug: data.organization_slug,\n        organization_logo_url: data.organization_logo_url,\n        trusted_metadata: data.trusted_metadata,\n        sso_default_connection_id: data.sso_default_connection_id,\n        sso_jit_provisioning: data.sso_jit_provisioning,\n        sso_jit_provisioning_allowed_connections: data.sso_jit_provisioning_allowed_connections,\n        email_allowed_domains: data.email_allowed_domains,\n        email_jit_provisioning: data.email_jit_provisioning,\n        email_invites: data.email_invites,\n        auth_methods: data.auth_methods,\n        allowed_auth_methods: data.allowed_auth_methods,\n        mfa_policy: data.mfa_policy\n      }\n    });\n  }\n  /**\n   * Deletes an Organization specified by `organization_id`. All Members of the Organization will also be\n   * deleted.\n   * @param data {@link B2BOrganizationsDeleteRequest}\n   * @returns {@link B2BOrganizationsDeleteResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n  delete(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"DELETE\",\n      url: `/v1/b2b/organizations/${data.organization_id}`,\n      data: {}\n    });\n  }\n  /**\n   * Search for Organizations. If you send a request with no body params, no filtering will be applied and\n   * the endpoint will return all Organizations. All fuzzy search filters require a minimum of three\n   * characters.\n   * @param data {@link B2BOrganizationsSearchRequest}\n   * @returns {@link B2BOrganizationsSearchResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n  search(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/organizations/search`,\n      data\n    });\n  }\n}\nexports.Organizations = Organizations;","map":{"version":3,"names":["Object","defineProperty","exports","value","Organizations","_organizations_members","require","_shared","constructor","fetchConfig","members","Members","create","data","request","method","url","get","params","organization_id","update","organization_name","organization_slug","organization_logo_url","trusted_metadata","sso_default_connection_id","sso_jit_provisioning","sso_jit_provisioning_allowed_connections","email_allowed_domains","email_jit_provisioning","email_invites","auth_methods","allowed_auth_methods","mfa_policy","delete","search"],"sources":["D:/code/Techfriar/week5-task/verifications/node_modules/stytch/dist/b2b/organizations.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Organizations = void 0;\n\nvar _organizations_members = require(\"./organizations_members\");\n\nvar _shared = require(\"../shared\");\n\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n// ENDMANUAL(SearchQueryOperand)\nclass Organizations {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n    this.members = new _organizations_members.Members(this.fetchConfig);\n  }\n  /**\n   * Creates an Organization. An `organization_name` and a unique `organization_slug` are required.\n   *\n   * By default, `email_invites` and `sso_jit_provisioning` will be set to `ALL_ALLOWED`, and `mfa_policy`\n   * will be set to `OPTIONAL` if no Organization authentication settings are explicitly defined in the\n   * request.\n   *\n   * *See the [Organization authentication settings](https://stytch.com/docs/b2b/api/org-auth-settings)\n   * resource to learn more about fields like `email_jit_provisioning`, `email_invites`,\n   * `sso_jit_provisioning`, etc., and their behaviors.\n   * @param data {@link B2BOrganizationsCreateRequest}\n   * @returns {@link B2BOrganizationsCreateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n\n  create(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/organizations`,\n      data\n    });\n  }\n  /**\n   * Returns an Organization specified by `organization_id`.\n   * @param data {@link B2BOrganizationsGetRequest}\n   * @returns {@link B2BOrganizationsGetResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n\n  get(params) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"GET\",\n      url: `/v1/b2b/organizations/${params.organization_id}`,\n      params: {}\n    });\n  }\n  /**\n   * Updates an Organization specified by `organization_id`. An Organization must always have at least one\n   * auth setting set to either `RESTRICTED` or `ALL_ALLOWED` in order to provision new Members. test\n   *\n   * *See the [Organization authentication settings](https://stytch.com/docs/b2b/api/org-auth-settings)\n   * resource to learn more about fields like `email_jit_provisioning`, `email_invites`,\n   * `sso_jit_provisioning`, etc., and their behaviors.\n   * @param data {@link B2BOrganizationsUpdateRequest}\n   * @returns {@link B2BOrganizationsUpdateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n\n  update(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"PUT\",\n      url: `/v1/b2b/organizations/${data.organization_id}`,\n      data: {\n        organization_name: data.organization_name,\n        organization_slug: data.organization_slug,\n        organization_logo_url: data.organization_logo_url,\n        trusted_metadata: data.trusted_metadata,\n        sso_default_connection_id: data.sso_default_connection_id,\n        sso_jit_provisioning: data.sso_jit_provisioning,\n        sso_jit_provisioning_allowed_connections: data.sso_jit_provisioning_allowed_connections,\n        email_allowed_domains: data.email_allowed_domains,\n        email_jit_provisioning: data.email_jit_provisioning,\n        email_invites: data.email_invites,\n        auth_methods: data.auth_methods,\n        allowed_auth_methods: data.allowed_auth_methods,\n        mfa_policy: data.mfa_policy\n      }\n    });\n  }\n  /**\n   * Deletes an Organization specified by `organization_id`. All Members of the Organization will also be\n   * deleted.\n   * @param data {@link B2BOrganizationsDeleteRequest}\n   * @returns {@link B2BOrganizationsDeleteResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n\n  delete(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"DELETE\",\n      url: `/v1/b2b/organizations/${data.organization_id}`,\n      data: {}\n    });\n  }\n  /**\n   * Search for Organizations. If you send a request with no body params, no filtering will be applied and\n   * the endpoint will return all Organizations. All fuzzy search filters require a minimum of three\n   * characters.\n   * @param data {@link B2BOrganizationsSearchRequest}\n   * @returns {@link B2BOrganizationsSearchResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n\n  search(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/organizations/search`,\n      data\n    });\n  }\n\n}\n\nexports.Organizations = Organizations;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}