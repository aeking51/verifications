{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Clients = void 0;\nvar _shared = require(\"../shared\");\nvar _m2m_clients_secrets = require(\"./m2m_clients_secrets\");\n\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\nclass Clients {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n    this.secrets = new _m2m_clients_secrets.Secrets(this.fetchConfig);\n  }\n  /**\n   * Gets information about an existing M2M Client.\n   * @param data {@link M2MClientsGetRequest}\n   * @returns {@link M2MClientsGetResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n  get(params) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"GET\",\n      url: `/v1/m2m/clients/${params.client_id}`,\n      params: {}\n    });\n  }\n  /**\n   * Search for M2M Clients within your Stytch Project. Submit an empty `query` in the request to return all\n   * M2M Clients.\n   *\n   * The following search filters are supported today:\n   * - `client_id`: Pass in a list of client IDs to get many clients in a single request\n   * - `client_name`: Search for clients by exact match on client name\n   * - `scopes`: Search for clients assigned a specific scope\n   * @param data {@link M2MClientsSearchRequest}\n   * @returns {@link M2MClientsSearchResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n  search(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/m2m/clients/search`,\n      data\n    });\n  }\n  /**\n   * Updates an existing M2M Client. You can use this endpoint to activate or deactivate a M2M Client by\n   * changing its `status`. A deactivated M2M Client will not be allowed to perform future token exchange\n   * flows until it is reactivated.\n   *\n   * **Important:** Deactivating a M2M Client will not invalidate any existing JWTs issued to the client,\n   * only prevent it from receiving new ones.\n   * To protect more-sensitive routes, pass a lower `max_token_age` value\n   * when[authenticating the token](https://stytch.com/docs/b2b/api/authenticate-m2m-token)[authenticating the token](https://stytch.com/docs/api/authenticate-m2m-token).\n   * @param data {@link M2MClientsUpdateRequest}\n   * @returns {@link M2MClientsUpdateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n  update(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"PUT\",\n      url: `/v1/m2m/clients/${data.client_id}`,\n      data: {\n        client_name: data.client_name,\n        client_description: data.client_description,\n        status: data.status,\n        scopes: data.scopes,\n        trusted_metadata: data.trusted_metadata\n      }\n    });\n  }\n  /**\n   * Deletes the M2M Client.\n   *\n   * **Important:** Deleting a M2M Client will not invalidate any existing JWTs issued to the client, only\n   * prevent it from receiving new ones.\n   * To protect more-sensitive routes, pass a lower `max_token_age` value\n   * when[authenticating the token](https://stytch.com/docs/b2b/api/authenticate-m2m-token)[authenticating the token](https://stytch.com/docs/api/authenticate-m2m-token).\n   * @param data {@link M2MClientsDeleteRequest}\n   * @returns {@link M2MClientsDeleteResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n  delete(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"DELETE\",\n      url: `/v1/m2m/clients/${data.client_id}`,\n      data: {}\n    });\n  }\n  /**\n   * Creates a new M2M Client. On initial client creation, you may pass in a custom `client_id` or\n   * `client_secret` to import an existing M2M client. If you do not pass in a custom `client_id` or\n   * `client_secret`, one will be generated automatically. The `client_id` must be unique among all clients\n   * in your project.\n   *\n   * **Important:** This is the only time you will be able to view the generated `client_secret` in the API\n   * response. Stytch stores a hash of the `client_secret` and cannot recover the value if lost. Be sure to\n   * persist the `client_secret` in a secure location. If the `client_secret` is lost, you will need to\n   * trigger a secret rotation flow to receive another one.\n   * @param data {@link M2MClientsCreateRequest}\n   * @returns {@link M2MClientsCreateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n  create(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/m2m/clients`,\n      data\n    });\n  }\n}\nexports.Clients = Clients;","map":{"version":3,"names":["Object","defineProperty","exports","value","Clients","_shared","require","_m2m_clients_secrets","constructor","fetchConfig","secrets","Secrets","get","params","request","method","url","client_id","search","data","update","client_name","client_description","status","scopes","trusted_metadata","delete","create"],"sources":["D:/code/Techfriar/week5-task/verifications/node_modules/stytch/dist/b2c/m2m_clients.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Clients = void 0;\n\nvar _shared = require(\"../shared\");\n\nvar _m2m_clients_secrets = require(\"./m2m_clients_secrets\");\n\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\nclass Clients {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n    this.secrets = new _m2m_clients_secrets.Secrets(this.fetchConfig);\n  }\n  /**\n   * Gets information about an existing M2M Client.\n   * @param data {@link M2MClientsGetRequest}\n   * @returns {@link M2MClientsGetResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n\n  get(params) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"GET\",\n      url: `/v1/m2m/clients/${params.client_id}`,\n      params: {}\n    });\n  }\n  /**\n   * Search for M2M Clients within your Stytch Project. Submit an empty `query` in the request to return all\n   * M2M Clients.\n   *\n   * The following search filters are supported today:\n   * - `client_id`: Pass in a list of client IDs to get many clients in a single request\n   * - `client_name`: Search for clients by exact match on client name\n   * - `scopes`: Search for clients assigned a specific scope\n   * @param data {@link M2MClientsSearchRequest}\n   * @returns {@link M2MClientsSearchResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n\n  search(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/m2m/clients/search`,\n      data\n    });\n  }\n  /**\n   * Updates an existing M2M Client. You can use this endpoint to activate or deactivate a M2M Client by\n   * changing its `status`. A deactivated M2M Client will not be allowed to perform future token exchange\n   * flows until it is reactivated.\n   *\n   * **Important:** Deactivating a M2M Client will not invalidate any existing JWTs issued to the client,\n   * only prevent it from receiving new ones.\n   * To protect more-sensitive routes, pass a lower `max_token_age` value\n   * when[authenticating the token](https://stytch.com/docs/b2b/api/authenticate-m2m-token)[authenticating the token](https://stytch.com/docs/api/authenticate-m2m-token).\n   * @param data {@link M2MClientsUpdateRequest}\n   * @returns {@link M2MClientsUpdateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n\n  update(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"PUT\",\n      url: `/v1/m2m/clients/${data.client_id}`,\n      data: {\n        client_name: data.client_name,\n        client_description: data.client_description,\n        status: data.status,\n        scopes: data.scopes,\n        trusted_metadata: data.trusted_metadata\n      }\n    });\n  }\n  /**\n   * Deletes the M2M Client.\n   *\n   * **Important:** Deleting a M2M Client will not invalidate any existing JWTs issued to the client, only\n   * prevent it from receiving new ones.\n   * To protect more-sensitive routes, pass a lower `max_token_age` value\n   * when[authenticating the token](https://stytch.com/docs/b2b/api/authenticate-m2m-token)[authenticating the token](https://stytch.com/docs/api/authenticate-m2m-token).\n   * @param data {@link M2MClientsDeleteRequest}\n   * @returns {@link M2MClientsDeleteResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n\n  delete(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"DELETE\",\n      url: `/v1/m2m/clients/${data.client_id}`,\n      data: {}\n    });\n  }\n  /**\n   * Creates a new M2M Client. On initial client creation, you may pass in a custom `client_id` or\n   * `client_secret` to import an existing M2M client. If you do not pass in a custom `client_id` or\n   * `client_secret`, one will be generated automatically. The `client_id` must be unique among all clients\n   * in your project.\n   *\n   * **Important:** This is the only time you will be able to view the generated `client_secret` in the API\n   * response. Stytch stores a hash of the `client_secret` and cannot recover the value if lost. Be sure to\n   * persist the `client_secret` in a secure location. If the `client_secret` is lost, you will need to\n   * trigger a secret rotation flow to receive another one.\n   * @param data {@link M2MClientsCreateRequest}\n   * @returns {@link M2MClientsCreateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n\n  create(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/m2m/clients`,\n      data\n    });\n  }\n\n}\n\nexports.Clients = Clients;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAG,KAAK,CAAC;AAExB,IAAIC,OAAO,GAAGC,OAAO,CAAC,WAAW,CAAC;AAElC,IAAIC,oBAAoB,GAAGD,OAAO,CAAC,uBAAuB,CAAC;;AAE3D;AACA;AACA;AACA;AACA;AACA,MAAMF,OAAO,CAAC;EACZI,WAAWA,CAACC,WAAW,EAAE;IACvB,IAAI,CAACA,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACC,OAAO,GAAG,IAAIH,oBAAoB,CAACI,OAAO,CAAC,IAAI,CAACF,WAAW,CAAC;EACnE;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;EAGEG,GAAGA,CAACC,MAAM,EAAE;IACV,OAAO,CAAC,CAAC,EAAER,OAAO,CAACS,OAAO,EAAE,IAAI,CAACL,WAAW,EAAE;MAC5CM,MAAM,EAAE,KAAK;MACbC,GAAG,EAAG,mBAAkBH,MAAM,CAACI,SAAU,EAAC;MAC1CJ,MAAM,EAAE,CAAC;IACX,CAAC,CAAC;EACJ;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGEK,MAAMA,CAACC,IAAI,EAAE;IACX,OAAO,CAAC,CAAC,EAAEd,OAAO,CAACS,OAAO,EAAE,IAAI,CAACL,WAAW,EAAE;MAC5CM,MAAM,EAAE,MAAM;MACdC,GAAG,EAAG,wBAAuB;MAC7BG;IACF,CAAC,CAAC;EACJ;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGEC,MAAMA,CAACD,IAAI,EAAE;IACX,OAAO,CAAC,CAAC,EAAEd,OAAO,CAACS,OAAO,EAAE,IAAI,CAACL,WAAW,EAAE;MAC5CM,MAAM,EAAE,KAAK;MACbC,GAAG,EAAG,mBAAkBG,IAAI,CAACF,SAAU,EAAC;MACxCE,IAAI,EAAE;QACJE,WAAW,EAAEF,IAAI,CAACE,WAAW;QAC7BC,kBAAkB,EAAEH,IAAI,CAACG,kBAAkB;QAC3CC,MAAM,EAAEJ,IAAI,CAACI,MAAM;QACnBC,MAAM,EAAEL,IAAI,CAACK,MAAM;QACnBC,gBAAgB,EAAEN,IAAI,CAACM;MACzB;IACF,CAAC,CAAC;EACJ;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGEC,MAAMA,CAACP,IAAI,EAAE;IACX,OAAO,CAAC,CAAC,EAAEd,OAAO,CAACS,OAAO,EAAE,IAAI,CAACL,WAAW,EAAE;MAC5CM,MAAM,EAAE,QAAQ;MAChBC,GAAG,EAAG,mBAAkBG,IAAI,CAACF,SAAU,EAAC;MACxCE,IAAI,EAAE,CAAC;IACT,CAAC,CAAC;EACJ;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGEQ,MAAMA,CAACR,IAAI,EAAE;IACX,OAAO,CAAC,CAAC,EAAEd,OAAO,CAACS,OAAO,EAAE,IAAI,CAACL,WAAW,EAAE;MAC5CM,MAAM,EAAE,MAAM;MACdC,GAAG,EAAG,iBAAgB;MACtBG;IACF,CAAC,CAAC;EACJ;AAEF;AAEAjB,OAAO,CAACE,OAAO,GAAGA,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}