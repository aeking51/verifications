{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Passwords = void 0;\nvar _passwords_email = require(\"./passwords_email\");\nvar _passwords_existing_password = require(\"./passwords_existing_password\");\nvar _shared = require(\"../shared\");\nvar _passwords_session = require(\"./passwords_session\");\n\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\nclass Passwords {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n    this.email = new _passwords_email.Email(this.fetchConfig);\n    this.sessions = new _passwords_session.Sessions(this.fetchConfig);\n    this.existingPassword = new _passwords_existing_password.ExistingPassword(this.fetchConfig);\n  }\n  /**\n   * This API allows you to check whether the user’s provided password is valid, and to provide feedback to\n   * the user on how to increase the strength of their password.\n   *\n   * This endpoint adapts to your Project's password strength configuration. If you're using\n   * [zxcvbn](https://stytch.com/docs/guides/passwords/strength-policy), the default, your passwords are\n   * considered valid if the strength score is >= 3. If you're using\n   * [LUDS](https://stytch.com/docs/guides/passwords/strength-policy), your passwords are considered valid if\n   * they meet the requirements that you've set with Stytch. You may update your password strength\n   * configuration in the [stytch dashboard](https://stytch.com/dashboard/password-strength-config).\n   *\n   * ## Password feedback\n   * The zxcvbn_feedback and luds_feedback objects contains relevant fields for you to relay feedback to\n   * users that failed to create a strong enough password.\n   *\n   * If you're using [zxcvbn](https://stytch.com/docs/guides/passwords/strength-policy), the feedback object\n   * will contain warning and suggestions for any password that does not meet the\n   * [zxcvbn](https://stytch.com/docs/guides/passwords/strength-policy) strength requirements. You can return\n   * these strings directly to the user to help them craft a strong password.\n   *\n   * If you're using [LUDS](https://stytch.com/docs/guides/passwords/strength-policy), the feedback object\n   * will contain a collection of fields that the user failed or passed. You'll want to prompt the user to\n   * create a password that meets all requirements that they failed.\n   * @param data {@link B2BPasswordsStrengthCheckRequest}\n   * @returns {@link B2BPasswordsStrengthCheckResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n  strengthCheck(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/passwords/strength_check`,\n      data\n    });\n  }\n  /**\n   * Adds an existing password to a member's email that doesn't have a password yet. We support migrating\n   * members from passwords stored with bcrypt, scrypt, argon2, MD-5, SHA-1, and PBKDF2. This endpoint has a\n   * rate limit of 100 requests per second.\n   * @param data {@link B2BPasswordsMigrateRequest}\n   * @returns {@link B2BPasswordsMigrateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n  migrate(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/passwords/migrate`,\n      data\n    });\n  }\n  /**\n   * Authenticate a member with their email address and password. This endpoint verifies that the member has\n   * a password currently set, and that the entered password is correct. There are two instances where the\n   * endpoint will return a reset_password error even if they enter their previous password:\n   * * The member’s credentials appeared in the HaveIBeenPwned dataset.\n   *     * We force a password reset to ensure that the member is the legitimate owner of the email address,\n   * and not a malicious actor abusing the compromised credentials.\n   * * A member that has previously authenticated with email/password uses a passwordless authentication\n   * method tied to the same email address (e.g. Magic Links) for the first time. Any subsequent\n   * email/password authentication attempt will result in this error.\n   *     * We force a password reset in this instance in order to safely deduplicate the account by email\n   * address, without introducing the risk of a pre-hijack account takeover attack.\n   *     * Imagine a bad actor creates many accounts using passwords and the known email addresses of their\n   * victims. If a victim comes to the site and logs in for the first time with an email-based passwordless\n   * authentication method then both the victim and the bad actor have credentials to access to the same\n   * account. To prevent this, any further email/password login attempts first require a password reset which\n   * can only be accomplished by someone with access to the underlying email address.\n   *\n   * If the Member is required to complete MFA to log in to the Organization, the returned value of\n   * `member_authenticated` will be `false`, and an `intermediate_session_token` will be returned.\n   * The `intermediate_session_token` can be passed into the\n   * [OTP SMS Authenticate endpoint](https://stytch.com/docs/b2b/api/authenticate-otp-sms) to complete the\n   * MFA step and acquire a full member session.\n   * The `session_duration_minutes` and `session_custom_claims` parameters will be ignored.\n   *\n   * If a valid `session_token` or `session_jwt` is passed in, the Member will not be required to complete an\n   * MFA step.\n   * @param data {@link B2BPasswordsAuthenticateRequest}\n   * @returns {@link B2BPasswordsAuthenticateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n  authenticate(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/passwords/authenticate`,\n      data\n    });\n  }\n}\nexports.Passwords = Passwords;","map":{"version":3,"names":["Object","defineProperty","exports","value","Passwords","_passwords_email","require","_passwords_existing_password","_shared","_passwords_session","constructor","fetchConfig","email","Email","sessions","Sessions","existingPassword","ExistingPassword","strengthCheck","data","request","method","url","migrate","authenticate"],"sources":["D:/code/Techfriar/week5-task/verifications/node_modules/stytch/dist/b2b/passwords.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Passwords = void 0;\n\nvar _passwords_email = require(\"./passwords_email\");\n\nvar _passwords_existing_password = require(\"./passwords_existing_password\");\n\nvar _shared = require(\"../shared\");\n\nvar _passwords_session = require(\"./passwords_session\");\n\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\nclass Passwords {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n    this.email = new _passwords_email.Email(this.fetchConfig);\n    this.sessions = new _passwords_session.Sessions(this.fetchConfig);\n    this.existingPassword = new _passwords_existing_password.ExistingPassword(this.fetchConfig);\n  }\n  /**\n   * This API allows you to check whether the user’s provided password is valid, and to provide feedback to\n   * the user on how to increase the strength of their password.\n   *\n   * This endpoint adapts to your Project's password strength configuration. If you're using\n   * [zxcvbn](https://stytch.com/docs/guides/passwords/strength-policy), the default, your passwords are\n   * considered valid if the strength score is >= 3. If you're using\n   * [LUDS](https://stytch.com/docs/guides/passwords/strength-policy), your passwords are considered valid if\n   * they meet the requirements that you've set with Stytch. You may update your password strength\n   * configuration in the [stytch dashboard](https://stytch.com/dashboard/password-strength-config).\n   *\n   * ## Password feedback\n   * The zxcvbn_feedback and luds_feedback objects contains relevant fields for you to relay feedback to\n   * users that failed to create a strong enough password.\n   *\n   * If you're using [zxcvbn](https://stytch.com/docs/guides/passwords/strength-policy), the feedback object\n   * will contain warning and suggestions for any password that does not meet the\n   * [zxcvbn](https://stytch.com/docs/guides/passwords/strength-policy) strength requirements. You can return\n   * these strings directly to the user to help them craft a strong password.\n   *\n   * If you're using [LUDS](https://stytch.com/docs/guides/passwords/strength-policy), the feedback object\n   * will contain a collection of fields that the user failed or passed. You'll want to prompt the user to\n   * create a password that meets all requirements that they failed.\n   * @param data {@link B2BPasswordsStrengthCheckRequest}\n   * @returns {@link B2BPasswordsStrengthCheckResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n\n  strengthCheck(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/passwords/strength_check`,\n      data\n    });\n  }\n  /**\n   * Adds an existing password to a member's email that doesn't have a password yet. We support migrating\n   * members from passwords stored with bcrypt, scrypt, argon2, MD-5, SHA-1, and PBKDF2. This endpoint has a\n   * rate limit of 100 requests per second.\n   * @param data {@link B2BPasswordsMigrateRequest}\n   * @returns {@link B2BPasswordsMigrateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n\n  migrate(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/passwords/migrate`,\n      data\n    });\n  }\n  /**\n   * Authenticate a member with their email address and password. This endpoint verifies that the member has\n   * a password currently set, and that the entered password is correct. There are two instances where the\n   * endpoint will return a reset_password error even if they enter their previous password:\n   * * The member’s credentials appeared in the HaveIBeenPwned dataset.\n   *     * We force a password reset to ensure that the member is the legitimate owner of the email address,\n   * and not a malicious actor abusing the compromised credentials.\n   * * A member that has previously authenticated with email/password uses a passwordless authentication\n   * method tied to the same email address (e.g. Magic Links) for the first time. Any subsequent\n   * email/password authentication attempt will result in this error.\n   *     * We force a password reset in this instance in order to safely deduplicate the account by email\n   * address, without introducing the risk of a pre-hijack account takeover attack.\n   *     * Imagine a bad actor creates many accounts using passwords and the known email addresses of their\n   * victims. If a victim comes to the site and logs in for the first time with an email-based passwordless\n   * authentication method then both the victim and the bad actor have credentials to access to the same\n   * account. To prevent this, any further email/password login attempts first require a password reset which\n   * can only be accomplished by someone with access to the underlying email address.\n   *\n   * If the Member is required to complete MFA to log in to the Organization, the returned value of\n   * `member_authenticated` will be `false`, and an `intermediate_session_token` will be returned.\n   * The `intermediate_session_token` can be passed into the\n   * [OTP SMS Authenticate endpoint](https://stytch.com/docs/b2b/api/authenticate-otp-sms) to complete the\n   * MFA step and acquire a full member session.\n   * The `session_duration_minutes` and `session_custom_claims` parameters will be ignored.\n   *\n   * If a valid `session_token` or `session_jwt` is passed in, the Member will not be required to complete an\n   * MFA step.\n   * @param data {@link B2BPasswordsAuthenticateRequest}\n   * @returns {@link B2BPasswordsAuthenticateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n\n  authenticate(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/passwords/authenticate`,\n      data\n    });\n  }\n\n}\n\nexports.Passwords = Passwords;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,SAAS,GAAG,KAAK,CAAC;AAE1B,IAAIC,gBAAgB,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AAEnD,IAAIC,4BAA4B,GAAGD,OAAO,CAAC,+BAA+B,CAAC;AAE3E,IAAIE,OAAO,GAAGF,OAAO,CAAC,WAAW,CAAC;AAElC,IAAIG,kBAAkB,GAAGH,OAAO,CAAC,qBAAqB,CAAC;;AAEvD;AACA;AACA;AACA;AACA;AACA,MAAMF,SAAS,CAAC;EACdM,WAAWA,CAACC,WAAW,EAAE;IACvB,IAAI,CAACA,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACC,KAAK,GAAG,IAAIP,gBAAgB,CAACQ,KAAK,CAAC,IAAI,CAACF,WAAW,CAAC;IACzD,IAAI,CAACG,QAAQ,GAAG,IAAIL,kBAAkB,CAACM,QAAQ,CAAC,IAAI,CAACJ,WAAW,CAAC;IACjE,IAAI,CAACK,gBAAgB,GAAG,IAAIT,4BAA4B,CAACU,gBAAgB,CAAC,IAAI,CAACN,WAAW,CAAC;EAC7F;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGEO,aAAaA,CAACC,IAAI,EAAE;IAClB,OAAO,CAAC,CAAC,EAAEX,OAAO,CAACY,OAAO,EAAE,IAAI,CAACT,WAAW,EAAE;MAC5CU,MAAM,EAAE,MAAM;MACdC,GAAG,EAAG,kCAAiC;MACvCH;IACF,CAAC,CAAC;EACJ;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGEI,OAAOA,CAACJ,IAAI,EAAE;IACZ,OAAO,CAAC,CAAC,EAAEX,OAAO,CAACY,OAAO,EAAE,IAAI,CAACT,WAAW,EAAE;MAC5CU,MAAM,EAAE,MAAM;MACdC,GAAG,EAAG,2BAA0B;MAChCH;IACF,CAAC,CAAC;EACJ;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGEK,YAAYA,CAACL,IAAI,EAAE;IACjB,OAAO,CAAC,CAAC,EAAEX,OAAO,CAACY,OAAO,EAAE,IAAI,CAACT,WAAW,EAAE;MAC5CU,MAAM,EAAE,MAAM;MACdC,GAAG,EAAG,gCAA+B;MACrCH;IACF,CAAC,CAAC;EACJ;AAEF;AAEAjB,OAAO,CAACE,SAAS,GAAGA,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}