{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Members = void 0;\nvar _shared = require(\"../shared\");\n\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\nclass Members {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n  }\n  /**\n   * Updates a Member specified by `organization_id` and `member_id`.\n   * @param data {@link B2BOrganizationsMembersUpdateRequest}\n   * @returns {@link B2BOrganizationsMembersUpdateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n  update(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"PUT\",\n      url: `/v1/b2b/organizations/${data.organization_id}/members/${data.member_id}`,\n      data: {\n        name: data.name,\n        trusted_metadata: data.trusted_metadata,\n        untrusted_metadata: data.untrusted_metadata,\n        is_breakglass: data.is_breakglass,\n        mfa_phone_number: data.mfa_phone_number,\n        mfa_enrolled: data.mfa_enrolled\n      }\n    });\n  }\n  /**\n   * Deletes a Member specified by `organization_id` and `member_id`.\n   * @param data {@link B2BOrganizationsMembersDeleteRequest}\n   * @returns {@link B2BOrganizationsMembersDeleteResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n  delete(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"DELETE\",\n      url: `/v1/b2b/organizations/${data.organization_id}/members/${data.member_id}`,\n      data: {}\n    });\n  }\n  /**\n   * Reactivates a deleted Member's status and its associated email status (if applicable) to active,\n   * specified by `organization_id` and `member_id`.\n   * @param data {@link B2BOrganizationsMembersReactivateRequest}\n   * @returns {@link B2BOrganizationsMembersReactivateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n  reactivate(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"PUT\",\n      url: `/v1/b2b/organizations/${data.organization_id}/members/${data.member_id}/reactivate`,\n      data: {}\n    });\n  }\n  /**\n   * Delete a Member's MFA phone number.\n   *\n   * To change a Member's phone number, you must first call this endpoint to delete the existing phone number.\n   *\n   * Existing Member Sessions that include a phone number authentication factor will not be revoked if the\n   * phone number is deleted, and MFA will not be enforced until the Member logs in again.\n   * If you wish to enforce MFA immediately after a phone number is deleted, you can do so by prompting the\n   * Member to enter a new phone number\n   * and calling the [OTP SMS send](https://stytch.com/docs/b2b/api/otp-sms-send) endpoint, then calling the\n   * [OTP SMS Authenticate](https://stytch.com/docs/b2b/api/authenticate-otp-sms) endpoint.\n   * @param data {@link B2BOrganizationsMembersDeleteMFAPhoneNumberRequest}\n   * @returns {@link B2BOrganizationsMembersDeleteMFAPhoneNumberResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n  deleteMFAPhoneNumber(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"DELETE\",\n      url: `/v1/b2b/organizations/${data.organization_id}/members/mfa_phone_numbers/${data.member_id}`,\n      data: {}\n    });\n  }\n  /**\n   * Search for Members within specified Organizations. An array with at least one `organization_id` is\n   * required. Submitting an empty `query` returns all non-deleted Members within the specified Organizations.\n   *\n   * *All fuzzy search filters require a minimum of three characters.\n   * @param data {@link B2BOrganizationsMembersSearchRequest}\n   * @returns {@link B2BOrganizationsMembersSearchResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n  search(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/organizations/members/search`,\n      data\n    });\n  }\n  /**\n   * Delete a Member's password.\n   * @param data {@link B2BOrganizationsMembersDeletePasswordRequest}\n   * @returns {@link B2BOrganizationsMembersDeletePasswordResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n  deletePassword(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"DELETE\",\n      url: `/v1/b2b/organizations/${data.organization_id}/members/passwords/${data.member_password_id}`,\n      data: {}\n    });\n  }\n  /**\n   * Creates a Member. An `organization_id` and `email_address` are required.\n   * @param data {@link B2BOrganizationsMembersCreateRequest}\n   * @returns {@link B2BOrganizationsMembersCreateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n  create(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/organizations/${data.organization_id}/members`,\n      data: {\n        email_address: data.email_address,\n        name: data.name,\n        trusted_metadata: data.trusted_metadata,\n        untrusted_metadata: data.untrusted_metadata,\n        create_member_as_pending: data.create_member_as_pending,\n        is_breakglass: data.is_breakglass,\n        mfa_phone_number: data.mfa_phone_number,\n        mfa_enrolled: data.mfa_enrolled\n      }\n    });\n  }\n  /**\n   * Get a Member by `member_id` or `email_address`.\n   * @param data {@link B2BOrganizationsMembersGetRequest}\n   * @returns {@link B2BOrganizationsMembersGetResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n  get(params) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"GET\",\n      url: `/v1/b2b/organizations/${params.organization_id}/member`,\n      params: {\n        ...params\n      }\n    });\n  }\n}\nexports.Members = Members;","map":{"version":3,"names":["Object","defineProperty","exports","value","Members","_shared","require","constructor","fetchConfig","update","data","request","method","url","organization_id","member_id","name","trusted_metadata","untrusted_metadata","is_breakglass","mfa_phone_number","mfa_enrolled","delete","reactivate","deleteMFAPhoneNumber","search","deletePassword","member_password_id","create","email_address","create_member_as_pending","get","params"],"sources":["D:/code/Techfriar/week5-task/verifications/node_modules/stytch/dist/b2b/organizations_members.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Members = void 0;\n\nvar _shared = require(\"../shared\");\n\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\nclass Members {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n  }\n  /**\n   * Updates a Member specified by `organization_id` and `member_id`.\n   * @param data {@link B2BOrganizationsMembersUpdateRequest}\n   * @returns {@link B2BOrganizationsMembersUpdateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n\n  update(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"PUT\",\n      url: `/v1/b2b/organizations/${data.organization_id}/members/${data.member_id}`,\n      data: {\n        name: data.name,\n        trusted_metadata: data.trusted_metadata,\n        untrusted_metadata: data.untrusted_metadata,\n        is_breakglass: data.is_breakglass,\n        mfa_phone_number: data.mfa_phone_number,\n        mfa_enrolled: data.mfa_enrolled\n      }\n    });\n  }\n  /**\n   * Deletes a Member specified by `organization_id` and `member_id`.\n   * @param data {@link B2BOrganizationsMembersDeleteRequest}\n   * @returns {@link B2BOrganizationsMembersDeleteResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n\n  delete(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"DELETE\",\n      url: `/v1/b2b/organizations/${data.organization_id}/members/${data.member_id}`,\n      data: {}\n    });\n  }\n  /**\n   * Reactivates a deleted Member's status and its associated email status (if applicable) to active,\n   * specified by `organization_id` and `member_id`.\n   * @param data {@link B2BOrganizationsMembersReactivateRequest}\n   * @returns {@link B2BOrganizationsMembersReactivateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n\n  reactivate(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"PUT\",\n      url: `/v1/b2b/organizations/${data.organization_id}/members/${data.member_id}/reactivate`,\n      data: {}\n    });\n  }\n  /**\n   * Delete a Member's MFA phone number.\n   *\n   * To change a Member's phone number, you must first call this endpoint to delete the existing phone number.\n   *\n   * Existing Member Sessions that include a phone number authentication factor will not be revoked if the\n   * phone number is deleted, and MFA will not be enforced until the Member logs in again.\n   * If you wish to enforce MFA immediately after a phone number is deleted, you can do so by prompting the\n   * Member to enter a new phone number\n   * and calling the [OTP SMS send](https://stytch.com/docs/b2b/api/otp-sms-send) endpoint, then calling the\n   * [OTP SMS Authenticate](https://stytch.com/docs/b2b/api/authenticate-otp-sms) endpoint.\n   * @param data {@link B2BOrganizationsMembersDeleteMFAPhoneNumberRequest}\n   * @returns {@link B2BOrganizationsMembersDeleteMFAPhoneNumberResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n\n  deleteMFAPhoneNumber(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"DELETE\",\n      url: `/v1/b2b/organizations/${data.organization_id}/members/mfa_phone_numbers/${data.member_id}`,\n      data: {}\n    });\n  }\n  /**\n   * Search for Members within specified Organizations. An array with at least one `organization_id` is\n   * required. Submitting an empty `query` returns all non-deleted Members within the specified Organizations.\n   *\n   * *All fuzzy search filters require a minimum of three characters.\n   * @param data {@link B2BOrganizationsMembersSearchRequest}\n   * @returns {@link B2BOrganizationsMembersSearchResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n\n  search(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/organizations/members/search`,\n      data\n    });\n  }\n  /**\n   * Delete a Member's password.\n   * @param data {@link B2BOrganizationsMembersDeletePasswordRequest}\n   * @returns {@link B2BOrganizationsMembersDeletePasswordResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n\n  deletePassword(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"DELETE\",\n      url: `/v1/b2b/organizations/${data.organization_id}/members/passwords/${data.member_password_id}`,\n      data: {}\n    });\n  }\n  /**\n   * Creates a Member. An `organization_id` and `email_address` are required.\n   * @param data {@link B2BOrganizationsMembersCreateRequest}\n   * @returns {@link B2BOrganizationsMembersCreateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n\n  create(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/organizations/${data.organization_id}/members`,\n      data: {\n        email_address: data.email_address,\n        name: data.name,\n        trusted_metadata: data.trusted_metadata,\n        untrusted_metadata: data.untrusted_metadata,\n        create_member_as_pending: data.create_member_as_pending,\n        is_breakglass: data.is_breakglass,\n        mfa_phone_number: data.mfa_phone_number,\n        mfa_enrolled: data.mfa_enrolled\n      }\n    });\n  }\n  /**\n   * Get a Member by `member_id` or `email_address`.\n   * @param data {@link B2BOrganizationsMembersGetRequest}\n   * @returns {@link B2BOrganizationsMembersGetResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n\n  get(params) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"GET\",\n      url: `/v1/b2b/organizations/${params.organization_id}/member`,\n      params: { ...params\n      }\n    });\n  }\n\n}\n\nexports.Members = Members;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAG,KAAK,CAAC;AAExB,IAAIC,OAAO,GAAGC,OAAO,CAAC,WAAW,CAAC;;AAElC;AACA;AACA;AACA;AACA;AACA,MAAMF,OAAO,CAAC;EACZG,WAAWA,CAACC,WAAW,EAAE;IACvB,IAAI,CAACA,WAAW,GAAGA,WAAW;EAChC;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;EAGEC,MAAMA,CAACC,IAAI,EAAE;IACX,OAAO,CAAC,CAAC,EAAEL,OAAO,CAACM,OAAO,EAAE,IAAI,CAACH,WAAW,EAAE;MAC5CI,MAAM,EAAE,KAAK;MACbC,GAAG,EAAG,yBAAwBH,IAAI,CAACI,eAAgB,YAAWJ,IAAI,CAACK,SAAU,EAAC;MAC9EL,IAAI,EAAE;QACJM,IAAI,EAAEN,IAAI,CAACM,IAAI;QACfC,gBAAgB,EAAEP,IAAI,CAACO,gBAAgB;QACvCC,kBAAkB,EAAER,IAAI,CAACQ,kBAAkB;QAC3CC,aAAa,EAAET,IAAI,CAACS,aAAa;QACjCC,gBAAgB,EAAEV,IAAI,CAACU,gBAAgB;QACvCC,YAAY,EAAEX,IAAI,CAACW;MACrB;IACF,CAAC,CAAC;EACJ;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;EAGEC,MAAMA,CAACZ,IAAI,EAAE;IACX,OAAO,CAAC,CAAC,EAAEL,OAAO,CAACM,OAAO,EAAE,IAAI,CAACH,WAAW,EAAE;MAC5CI,MAAM,EAAE,QAAQ;MAChBC,GAAG,EAAG,yBAAwBH,IAAI,CAACI,eAAgB,YAAWJ,IAAI,CAACK,SAAU,EAAC;MAC9EL,IAAI,EAAE,CAAC;IACT,CAAC,CAAC;EACJ;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGEa,UAAUA,CAACb,IAAI,EAAE;IACf,OAAO,CAAC,CAAC,EAAEL,OAAO,CAACM,OAAO,EAAE,IAAI,CAACH,WAAW,EAAE;MAC5CI,MAAM,EAAE,KAAK;MACbC,GAAG,EAAG,yBAAwBH,IAAI,CAACI,eAAgB,YAAWJ,IAAI,CAACK,SAAU,aAAY;MACzFL,IAAI,EAAE,CAAC;IACT,CAAC,CAAC;EACJ;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGEc,oBAAoBA,CAACd,IAAI,EAAE;IACzB,OAAO,CAAC,CAAC,EAAEL,OAAO,CAACM,OAAO,EAAE,IAAI,CAACH,WAAW,EAAE;MAC5CI,MAAM,EAAE,QAAQ;MAChBC,GAAG,EAAG,yBAAwBH,IAAI,CAACI,eAAgB,8BAA6BJ,IAAI,CAACK,SAAU,EAAC;MAChGL,IAAI,EAAE,CAAC;IACT,CAAC,CAAC;EACJ;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGEe,MAAMA,CAACf,IAAI,EAAE;IACX,OAAO,CAAC,CAAC,EAAEL,OAAO,CAACM,OAAO,EAAE,IAAI,CAACH,WAAW,EAAE;MAC5CI,MAAM,EAAE,MAAM;MACdC,GAAG,EAAG,sCAAqC;MAC3CH;IACF,CAAC,CAAC;EACJ;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;EAGEgB,cAAcA,CAAChB,IAAI,EAAE;IACnB,OAAO,CAAC,CAAC,EAAEL,OAAO,CAACM,OAAO,EAAE,IAAI,CAACH,WAAW,EAAE;MAC5CI,MAAM,EAAE,QAAQ;MAChBC,GAAG,EAAG,yBAAwBH,IAAI,CAACI,eAAgB,sBAAqBJ,IAAI,CAACiB,kBAAmB,EAAC;MACjGjB,IAAI,EAAE,CAAC;IACT,CAAC,CAAC;EACJ;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;EAGEkB,MAAMA,CAAClB,IAAI,EAAE;IACX,OAAO,CAAC,CAAC,EAAEL,OAAO,CAACM,OAAO,EAAE,IAAI,CAACH,WAAW,EAAE;MAC5CI,MAAM,EAAE,MAAM;MACdC,GAAG,EAAG,yBAAwBH,IAAI,CAACI,eAAgB,UAAS;MAC5DJ,IAAI,EAAE;QACJmB,aAAa,EAAEnB,IAAI,CAACmB,aAAa;QACjCb,IAAI,EAAEN,IAAI,CAACM,IAAI;QACfC,gBAAgB,EAAEP,IAAI,CAACO,gBAAgB;QACvCC,kBAAkB,EAAER,IAAI,CAACQ,kBAAkB;QAC3CY,wBAAwB,EAAEpB,IAAI,CAACoB,wBAAwB;QACvDX,aAAa,EAAET,IAAI,CAACS,aAAa;QACjCC,gBAAgB,EAAEV,IAAI,CAACU,gBAAgB;QACvCC,YAAY,EAAEX,IAAI,CAACW;MACrB;IACF,CAAC,CAAC;EACJ;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;EAGEU,GAAGA,CAACC,MAAM,EAAE;IACV,OAAO,CAAC,CAAC,EAAE3B,OAAO,CAACM,OAAO,EAAE,IAAI,CAACH,WAAW,EAAE;MAC5CI,MAAM,EAAE,KAAK;MACbC,GAAG,EAAG,yBAAwBmB,MAAM,CAAClB,eAAgB,SAAQ;MAC7DkB,MAAM,EAAE;QAAE,GAAGA;MACb;IACF,CAAC,CAAC;EACJ;AAEF;AAEA9B,OAAO,CAACE,OAAO,GAAGA,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}