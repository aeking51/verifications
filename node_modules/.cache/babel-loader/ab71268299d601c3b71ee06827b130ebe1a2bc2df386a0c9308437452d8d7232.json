{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Email = void 0;\nvar _magic_links_email_discovery = require(\"./magic_links_email_discovery\");\nvar _shared = require(\"../shared\");\n\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\nclass Email {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n    this.discovery = new _magic_links_email_discovery.Discovery(this.fetchConfig);\n  }\n  /**\n   * Send either a login or signup magic link to a Member. A new, pending, or invited Member will receive a\n   * signup Email Magic Link. Members will have a `pending` status until they successfully authenticate. An\n   * active Member will receive a login Email Magic Link.\n   * @param data {@link B2BMagicLinksEmailLoginOrSignupRequest}\n   * @returns {@link B2BMagicLinksEmailLoginOrSignupResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n  loginOrSignup(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/magic_links/email/login_or_signup`,\n      data\n    });\n  }\n  /**\n   * Send an invite email to a new Member to join an Organization. The Member will be created with an\n   * `invited` status until they successfully authenticate. Sending invites to `pending` Members will update\n   * their status to `invited`. Sending invites to already `active` Members will return an error.\n   * @param data {@link B2BMagicLinksEmailInviteRequest}\n   * @returns {@link B2BMagicLinksEmailInviteResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n  invite(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/magic_links/email/invite`,\n      data\n    });\n  }\n}\nexports.Email = Email;","map":{"version":3,"names":["Object","defineProperty","exports","value","Email","_magic_links_email_discovery","require","_shared","constructor","fetchConfig","discovery","Discovery","loginOrSignup","data","request","method","url","invite"],"sources":["D:/code/Techfriar/week5-task/verifications/node_modules/stytch/dist/b2b/magic_links_email.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Email = void 0;\n\nvar _magic_links_email_discovery = require(\"./magic_links_email_discovery\");\n\nvar _shared = require(\"../shared\");\n\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\nclass Email {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n    this.discovery = new _magic_links_email_discovery.Discovery(this.fetchConfig);\n  }\n  /**\n   * Send either a login or signup magic link to a Member. A new, pending, or invited Member will receive a\n   * signup Email Magic Link. Members will have a `pending` status until they successfully authenticate. An\n   * active Member will receive a login Email Magic Link.\n   * @param data {@link B2BMagicLinksEmailLoginOrSignupRequest}\n   * @returns {@link B2BMagicLinksEmailLoginOrSignupResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n\n  loginOrSignup(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/magic_links/email/login_or_signup`,\n      data\n    });\n  }\n  /**\n   * Send an invite email to a new Member to join an Organization. The Member will be created with an\n   * `invited` status until they successfully authenticate. Sending invites to `pending` Members will update\n   * their status to `invited`. Sending invites to already `active` Members will return an error.\n   * @param data {@link B2BMagicLinksEmailInviteRequest}\n   * @returns {@link B2BMagicLinksEmailInviteResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n\n  invite(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/magic_links/email/invite`,\n      data\n    });\n  }\n\n}\n\nexports.Email = Email;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,KAAK,GAAG,KAAK,CAAC;AAEtB,IAAIC,4BAA4B,GAAGC,OAAO,CAAC,+BAA+B,CAAC;AAE3E,IAAIC,OAAO,GAAGD,OAAO,CAAC,WAAW,CAAC;;AAElC;AACA;AACA;AACA;AACA;AACA,MAAMF,KAAK,CAAC;EACVI,WAAWA,CAACC,WAAW,EAAE;IACvB,IAAI,CAACA,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACC,SAAS,GAAG,IAAIL,4BAA4B,CAACM,SAAS,CAAC,IAAI,CAACF,WAAW,CAAC;EAC/E;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGEG,aAAaA,CAACC,IAAI,EAAE;IAClB,OAAO,CAAC,CAAC,EAAEN,OAAO,CAACO,OAAO,EAAE,IAAI,CAACL,WAAW,EAAE;MAC5CM,MAAM,EAAE,MAAM;MACdC,GAAG,EAAG,2CAA0C;MAChDH;IACF,CAAC,CAAC;EACJ;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGEI,MAAMA,CAACJ,IAAI,EAAE;IACX,OAAO,CAAC,CAAC,EAAEN,OAAO,CAACO,OAAO,EAAE,IAAI,CAACL,WAAW,EAAE;MAC5CM,MAAM,EAAE,MAAM;MACdC,GAAG,EAAG,kCAAiC;MACvCH;IACF,CAAC,CAAC;EACJ;AAEF;AAEAX,OAAO,CAACE,KAAK,GAAGA,KAAK"},"metadata":{},"sourceType":"script","externalDependencies":[]}