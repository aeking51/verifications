{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Email = void 0;\nvar _shared = require(\"../shared\");\n\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\nclass Email {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n  }\n  /**\n   * Initiates a password reset for the email address provided. This will trigger an email to be sent to the\n   * address, containing a magic link that will allow them to set a new password and authenticate.\n   *\n   * This endpoint adapts to your Project's password strength configuration.\n   * If you're using [zxcvbn](https://stytch.com/docs/guides/passwords/strength-policy), the default, your\n   * passwords are considered valid\n   * if the strength score is >= 3. If you're using\n   * [LUDS](https://stytch.com/docs/guides/passwords/strength-policy), your passwords are\n   * considered valid if they meet the requirements that you've set with Stytch.\n   * You may update your password strength configuration in the\n   * [stytch dashboard](https://stytch.com/dashboard/password-strength-config).\n   * @param data {@link B2BPasswordsEmailResetStartRequest}\n   * @returns {@link B2BPasswordsEmailResetStartResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n  resetStart(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/passwords/email/reset/start`,\n      data\n    });\n  }\n  /**\n   * Reset the member's password and authenticate them. This endpoint checks that the password reset token is\n   * valid, hasn’t expired, or already been used.\n   *\n   * The provided password needs to meet our password strength requirements, which can be checked in advance\n   * with the password strength endpoint. If the token and password are accepted, the password is securely\n   * stored for future authentication and the user is authenticated.\n   *\n   * If the Member is required to complete MFA to log in to the Organization, the returned value of\n   * `member_authenticated` will be `false`, and an `intermediate_session_token` will be returned.\n   * The `intermediate_session_token` can be passed into the\n   * [OTP SMS Authenticate endpoint](https://stytch.com/docs/b2b/api/authenticate-otp-sms) to complete the\n   * MFA step and acquire a full member session.\n   * The `session_duration_minutes` and `session_custom_claims` parameters will be ignored.\n   *\n   * If a valid `session_token` or `session_jwt` is passed in, the Member will not be required to complete an\n   * MFA step.\n   * @param data {@link B2BPasswordsEmailResetRequest}\n   * @returns {@link B2BPasswordsEmailResetResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n  reset(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/passwords/email/reset`,\n      data\n    });\n  }\n}\nexports.Email = Email;","map":{"version":3,"names":["Object","defineProperty","exports","value","Email","_shared","require","constructor","fetchConfig","resetStart","data","request","method","url","reset"],"sources":["D:/code/Techfriar/week5-task/verifications/node_modules/stytch/dist/b2b/passwords_email.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Email = void 0;\n\nvar _shared = require(\"../shared\");\n\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\nclass Email {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n  }\n  /**\n   * Initiates a password reset for the email address provided. This will trigger an email to be sent to the\n   * address, containing a magic link that will allow them to set a new password and authenticate.\n   *\n   * This endpoint adapts to your Project's password strength configuration.\n   * If you're using [zxcvbn](https://stytch.com/docs/guides/passwords/strength-policy), the default, your\n   * passwords are considered valid\n   * if the strength score is >= 3. If you're using\n   * [LUDS](https://stytch.com/docs/guides/passwords/strength-policy), your passwords are\n   * considered valid if they meet the requirements that you've set with Stytch.\n   * You may update your password strength configuration in the\n   * [stytch dashboard](https://stytch.com/dashboard/password-strength-config).\n   * @param data {@link B2BPasswordsEmailResetStartRequest}\n   * @returns {@link B2BPasswordsEmailResetStartResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n\n  resetStart(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/passwords/email/reset/start`,\n      data\n    });\n  }\n  /**\n   * Reset the member's password and authenticate them. This endpoint checks that the password reset token is\n   * valid, hasn’t expired, or already been used.\n   *\n   * The provided password needs to meet our password strength requirements, which can be checked in advance\n   * with the password strength endpoint. If the token and password are accepted, the password is securely\n   * stored for future authentication and the user is authenticated.\n   *\n   * If the Member is required to complete MFA to log in to the Organization, the returned value of\n   * `member_authenticated` will be `false`, and an `intermediate_session_token` will be returned.\n   * The `intermediate_session_token` can be passed into the\n   * [OTP SMS Authenticate endpoint](https://stytch.com/docs/b2b/api/authenticate-otp-sms) to complete the\n   * MFA step and acquire a full member session.\n   * The `session_duration_minutes` and `session_custom_claims` parameters will be ignored.\n   *\n   * If a valid `session_token` or `session_jwt` is passed in, the Member will not be required to complete an\n   * MFA step.\n   * @param data {@link B2BPasswordsEmailResetRequest}\n   * @returns {@link B2BPasswordsEmailResetResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n\n  reset(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/passwords/email/reset`,\n      data\n    });\n  }\n\n}\n\nexports.Email = Email;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,KAAK,GAAG,KAAK,CAAC;AAEtB,IAAIC,OAAO,GAAGC,OAAO,CAAC,WAAW,CAAC;;AAElC;AACA;AACA;AACA;AACA;AACA,MAAMF,KAAK,CAAC;EACVG,WAAWA,CAACC,WAAW,EAAE;IACvB,IAAI,CAACA,WAAW,GAAGA,WAAW;EAChC;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGEC,UAAUA,CAACC,IAAI,EAAE;IACf,OAAO,CAAC,CAAC,EAAEL,OAAO,CAACM,OAAO,EAAE,IAAI,CAACH,WAAW,EAAE;MAC5CI,MAAM,EAAE,MAAM;MACdC,GAAG,EAAG,qCAAoC;MAC1CH;IACF,CAAC,CAAC;EACJ;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGEI,KAAKA,CAACJ,IAAI,EAAE;IACV,OAAO,CAAC,CAAC,EAAEL,OAAO,CAACM,OAAO,EAAE,IAAI,CAACH,WAAW,EAAE;MAC5CI,MAAM,EAAE,MAAM;MACdC,GAAG,EAAG,+BAA8B;MACpCH;IACF,CAAC,CAAC;EACJ;AAEF;AAEAR,OAAO,CAACE,KAAK,GAAGA,KAAK"},"metadata":{},"sourceType":"script","externalDependencies":[]}