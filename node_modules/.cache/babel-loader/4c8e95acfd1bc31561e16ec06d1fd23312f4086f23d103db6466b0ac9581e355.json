{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Secrets = void 0;\nvar _shared = require(\"../shared\");\n\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\nclass Secrets {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n  }\n  /**\n   * Initiate the rotation of an M2M client secret. After this endpoint is called, both the client's\n   * `client_secret` and `next_client_secret` will be valid. To complete the secret rotation flow, update all\n   * usages of `client_secret` to `next_client_secret` and call the\n   * [Rotate Secret Endpoint](https://stytch.com/docs/b2b/api/m2m-rotate-secret)[Rotate Secret Endpoint](https://stytch.com/docs/api/m2m-rotate-secret) to complete the flow.\n   * Secret rotation can be cancelled using the\n   * [Rotate Cancel Endpoint](https://stytch.com/docs/b2b/api/m2m-rotate-secret-cancel)[Rotate Cancel Endpoint](https://stytch.com/docs/api/m2m-rotate-secret-cancel).\n   *\n   * **Important:** This is the only time you will be able to view the generated `next_client_secret` in the\n   * API response. Stytch stores a hash of the `next_client_secret` and cannot recover the value if lost. Be\n   * sure to persist the `next_client_secret` in a secure location. If the `next_client_secret` is lost, you\n   * will need to trigger a secret rotation flow to receive another one.\n   * @param data {@link M2MClientsSecretsRotateStartRequest}\n   * @returns {@link M2MClientsSecretsRotateStartResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n  rotateStart(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/m2m/clients/${data.client_id}/secrets/rotate/start`,\n      data: {}\n    });\n  }\n  /**\n   * Cancel the rotation of an M2M client secret started with the\n   * [Start Secret Rotation Endpoint](https://stytch.com/docs/b2b/api/m2m-rotate-secret-start)\n   * [Start Secret Rotation Endpoint](https://stytch.com/docs/api/m2m-rotate-secret-start).\n   * After this endpoint is called, the client's `next_client_secret` is discarded and only the original\n   * `client_secret` will be valid.\n   * @param data {@link M2MClientsSecretsRotateCancelRequest}\n   * @returns {@link M2MClientsSecretsRotateCancelResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n  rotateCancel(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/m2m/clients/${data.client_id}/secrets/rotate/cancel`,\n      data: {}\n    });\n  }\n  /**\n   * Complete the rotation of an M2M client secret started with the\n   * [Start Secret Rotation Endpoint](https://stytch.com/docs/b2b/api/m2m-rotate-secret-start)\n   * [Start Secret Rotation Endpoint](https://stytch.com/docs/api/m2m-rotate-secret-start).\n   * After this endpoint is called, the client's `next_client_secret` becomes its `client_secret` and the\n   * previous `client_secret` will no longer be valid.\n   * @param data {@link M2MClientsSecretsRotateRequest}\n   * @returns {@link M2MClientsSecretsRotateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n  rotate(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/m2m/clients/${data.client_id}/secrets/rotate`,\n      data: {}\n    });\n  }\n}\nexports.Secrets = Secrets;","map":{"version":3,"names":["Object","defineProperty","exports","value","Secrets","_shared","require","constructor","fetchConfig","rotateStart","data","request","method","url","client_id","rotateCancel","rotate"],"sources":["D:/code/Techfriar/week5-task/verifications/node_modules/stytch/dist/b2c/m2m_clients_secrets.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Secrets = void 0;\n\nvar _shared = require(\"../shared\");\n\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\nclass Secrets {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n  }\n  /**\n   * Initiate the rotation of an M2M client secret. After this endpoint is called, both the client's\n   * `client_secret` and `next_client_secret` will be valid. To complete the secret rotation flow, update all\n   * usages of `client_secret` to `next_client_secret` and call the\n   * [Rotate Secret Endpoint](https://stytch.com/docs/b2b/api/m2m-rotate-secret)[Rotate Secret Endpoint](https://stytch.com/docs/api/m2m-rotate-secret) to complete the flow.\n   * Secret rotation can be cancelled using the\n   * [Rotate Cancel Endpoint](https://stytch.com/docs/b2b/api/m2m-rotate-secret-cancel)[Rotate Cancel Endpoint](https://stytch.com/docs/api/m2m-rotate-secret-cancel).\n   *\n   * **Important:** This is the only time you will be able to view the generated `next_client_secret` in the\n   * API response. Stytch stores a hash of the `next_client_secret` and cannot recover the value if lost. Be\n   * sure to persist the `next_client_secret` in a secure location. If the `next_client_secret` is lost, you\n   * will need to trigger a secret rotation flow to receive another one.\n   * @param data {@link M2MClientsSecretsRotateStartRequest}\n   * @returns {@link M2MClientsSecretsRotateStartResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n\n  rotateStart(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/m2m/clients/${data.client_id}/secrets/rotate/start`,\n      data: {}\n    });\n  }\n  /**\n   * Cancel the rotation of an M2M client secret started with the\n   * [Start Secret Rotation Endpoint](https://stytch.com/docs/b2b/api/m2m-rotate-secret-start)\n   * [Start Secret Rotation Endpoint](https://stytch.com/docs/api/m2m-rotate-secret-start).\n   * After this endpoint is called, the client's `next_client_secret` is discarded and only the original\n   * `client_secret` will be valid.\n   * @param data {@link M2MClientsSecretsRotateCancelRequest}\n   * @returns {@link M2MClientsSecretsRotateCancelResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n\n  rotateCancel(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/m2m/clients/${data.client_id}/secrets/rotate/cancel`,\n      data: {}\n    });\n  }\n  /**\n   * Complete the rotation of an M2M client secret started with the\n   * [Start Secret Rotation Endpoint](https://stytch.com/docs/b2b/api/m2m-rotate-secret-start)\n   * [Start Secret Rotation Endpoint](https://stytch.com/docs/api/m2m-rotate-secret-start).\n   * After this endpoint is called, the client's `next_client_secret` becomes its `client_secret` and the\n   * previous `client_secret` will no longer be valid.\n   * @param data {@link M2MClientsSecretsRotateRequest}\n   * @returns {@link M2MClientsSecretsRotateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n\n  rotate(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/m2m/clients/${data.client_id}/secrets/rotate`,\n      data: {}\n    });\n  }\n\n}\n\nexports.Secrets = Secrets;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAG,KAAK,CAAC;AAExB,IAAIC,OAAO,GAAGC,OAAO,CAAC,WAAW,CAAC;;AAElC;AACA;AACA;AACA;AACA;AACA,MAAMF,OAAO,CAAC;EACZG,WAAWA,CAACC,WAAW,EAAE;IACvB,IAAI,CAACA,WAAW,GAAGA,WAAW;EAChC;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGEC,WAAWA,CAACC,IAAI,EAAE;IAChB,OAAO,CAAC,CAAC,EAAEL,OAAO,CAACM,OAAO,EAAE,IAAI,CAACH,WAAW,EAAE;MAC5CI,MAAM,EAAE,MAAM;MACdC,GAAG,EAAG,mBAAkBH,IAAI,CAACI,SAAU,uBAAsB;MAC7DJ,IAAI,EAAE,CAAC;IACT,CAAC,CAAC;EACJ;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGEK,YAAYA,CAACL,IAAI,EAAE;IACjB,OAAO,CAAC,CAAC,EAAEL,OAAO,CAACM,OAAO,EAAE,IAAI,CAACH,WAAW,EAAE;MAC5CI,MAAM,EAAE,MAAM;MACdC,GAAG,EAAG,mBAAkBH,IAAI,CAACI,SAAU,wBAAuB;MAC9DJ,IAAI,EAAE,CAAC;IACT,CAAC,CAAC;EACJ;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGEM,MAAMA,CAACN,IAAI,EAAE;IACX,OAAO,CAAC,CAAC,EAAEL,OAAO,CAACM,OAAO,EAAE,IAAI,CAACH,WAAW,EAAE;MAC5CI,MAAM,EAAE,MAAM;MACdC,GAAG,EAAG,mBAAkBH,IAAI,CAACI,SAAU,iBAAgB;MACvDJ,IAAI,EAAE,CAAC;IACT,CAAC,CAAC;EACJ;AAEF;AAEAR,OAAO,CAACE,OAAO,GAAGA,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}