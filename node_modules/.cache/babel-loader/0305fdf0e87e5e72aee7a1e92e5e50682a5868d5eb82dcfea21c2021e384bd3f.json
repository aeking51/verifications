{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Email = void 0;\nvar _shared = require(\"../shared\");\n\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\nclass Email {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n  }\n  /**\n   * Send a magic link to an existing Stytch user using their email address. If you'd like to create a user\n   * and send them a magic link by email with one request, use our\n   * [log in or create endpoint](https://stytch.com/docs/api/log-in-or-create-user-by-email).\n   *\n   * ### Add an email to an existing user\n   * This endpoint also allows you to add a new email address to an existing Stytch User. Including a\n   * `user_id`, `session_token`, or `session_jwt` in your Send Magic Link by email request will add the new,\n   * unverified email address to the existing Stytch User. Upon successful authentication, the email address\n   * will be marked as verified.\n   *\n   * ### Next steps\n   * The user is emailed a magic link which redirects them to the provided\n   * [redirect URL](https://stytch.com/docs/guides/magic-links/email-magic-links/redirect-routing). Collect\n   * the `token` from the URL query parameters, and call\n   * [Authenticate magic link](https://stytch.com/docs/api/authenticate-magic-link) to complete\n   * authentication.\n   * @param data {@link MagicLinksEmailSendRequest}\n   * @returns {@link MagicLinksEmailSendResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n  send(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/magic_links/email/send`,\n      data\n    });\n  }\n  /**\n   * Send either a login or signup Magic Link to the User based on if the email is associated with a User\n   * already. A new or pending User will receive a signup Magic Link. An active User will receive a login\n   * Magic Link. For more information on how to control the status your Users are created in see the\n   * `create_user_as_pending` flag.\n   *\n   * ### Next steps\n   * The User is emailed a Magic Link which redirects them to the provided\n   * [redirect URL](https://stytch.com/docs/magic-links#email-magic-links_redirect-routing). Collect the\n   * `token` from the URL query parameters and call\n   * [Authenticate Magic Link](https://stytch.com/docs/api/authenticate-magic-link) to complete\n   * authentication.\n   * @param data {@link MagicLinksEmailLoginOrCreateRequest}\n   * @returns {@link MagicLinksEmailLoginOrCreateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n  loginOrCreate(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/magic_links/email/login_or_create`,\n      data\n    });\n  }\n  /**\n   * Create a User and send an invite Magic Link to the provided `email`. The User will be created with a\n   * `pending` status until they click the Magic Link in the invite email.\n   *\n   * ### Next steps\n   * The User is emailed a Magic Link which redirects them to the provided\n   * [redirect URL](https://stytch.com/docs/magic-links#email-magic-links_redirect-routing). Collect the\n   * `token` from the URL query parameters and call\n   * [Authenticate Magic Link](https://stytch.com/docs/api/authenticate-magic-link) to complete\n   * authentication.\n   * @param data {@link MagicLinksEmailInviteRequest}\n   * @returns {@link MagicLinksEmailInviteResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n  invite(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/magic_links/email/invite`,\n      data\n    });\n  }\n  /**\n   * Revoke a pending invite based on the `email` provided.\n   * @param data {@link MagicLinksEmailRevokeInviteRequest}\n   * @returns {@link MagicLinksEmailRevokeInviteResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n  revokeInvite(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/magic_links/email/revoke_invite`,\n      data\n    });\n  }\n}\nexports.Email = Email;","map":{"version":3,"names":["Object","defineProperty","exports","value","Email","_shared","require","constructor","fetchConfig","send","data","request","method","url","loginOrCreate","invite","revokeInvite"],"sources":["D:/code/Techfriar/week5-task/verifications/node_modules/stytch/dist/b2c/magic_links_email.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Email = void 0;\n\nvar _shared = require(\"../shared\");\n\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\nclass Email {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n  }\n  /**\n   * Send a magic link to an existing Stytch user using their email address. If you'd like to create a user\n   * and send them a magic link by email with one request, use our\n   * [log in or create endpoint](https://stytch.com/docs/api/log-in-or-create-user-by-email).\n   *\n   * ### Add an email to an existing user\n   * This endpoint also allows you to add a new email address to an existing Stytch User. Including a\n   * `user_id`, `session_token`, or `session_jwt` in your Send Magic Link by email request will add the new,\n   * unverified email address to the existing Stytch User. Upon successful authentication, the email address\n   * will be marked as verified.\n   *\n   * ### Next steps\n   * The user is emailed a magic link which redirects them to the provided\n   * [redirect URL](https://stytch.com/docs/guides/magic-links/email-magic-links/redirect-routing). Collect\n   * the `token` from the URL query parameters, and call\n   * [Authenticate magic link](https://stytch.com/docs/api/authenticate-magic-link) to complete\n   * authentication.\n   * @param data {@link MagicLinksEmailSendRequest}\n   * @returns {@link MagicLinksEmailSendResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n\n  send(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/magic_links/email/send`,\n      data\n    });\n  }\n  /**\n   * Send either a login or signup Magic Link to the User based on if the email is associated with a User\n   * already. A new or pending User will receive a signup Magic Link. An active User will receive a login\n   * Magic Link. For more information on how to control the status your Users are created in see the\n   * `create_user_as_pending` flag.\n   *\n   * ### Next steps\n   * The User is emailed a Magic Link which redirects them to the provided\n   * [redirect URL](https://stytch.com/docs/magic-links#email-magic-links_redirect-routing). Collect the\n   * `token` from the URL query parameters and call\n   * [Authenticate Magic Link](https://stytch.com/docs/api/authenticate-magic-link) to complete\n   * authentication.\n   * @param data {@link MagicLinksEmailLoginOrCreateRequest}\n   * @returns {@link MagicLinksEmailLoginOrCreateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n\n  loginOrCreate(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/magic_links/email/login_or_create`,\n      data\n    });\n  }\n  /**\n   * Create a User and send an invite Magic Link to the provided `email`. The User will be created with a\n   * `pending` status until they click the Magic Link in the invite email.\n   *\n   * ### Next steps\n   * The User is emailed a Magic Link which redirects them to the provided\n   * [redirect URL](https://stytch.com/docs/magic-links#email-magic-links_redirect-routing). Collect the\n   * `token` from the URL query parameters and call\n   * [Authenticate Magic Link](https://stytch.com/docs/api/authenticate-magic-link) to complete\n   * authentication.\n   * @param data {@link MagicLinksEmailInviteRequest}\n   * @returns {@link MagicLinksEmailInviteResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n\n  invite(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/magic_links/email/invite`,\n      data\n    });\n  }\n  /**\n   * Revoke a pending invite based on the `email` provided.\n   * @param data {@link MagicLinksEmailRevokeInviteRequest}\n   * @returns {@link MagicLinksEmailRevokeInviteResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n\n\n  revokeInvite(data) {\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/magic_links/email/revoke_invite`,\n      data\n    });\n  }\n\n}\n\nexports.Email = Email;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,KAAK,GAAG,KAAK,CAAC;AAEtB,IAAIC,OAAO,GAAGC,OAAO,CAAC,WAAW,CAAC;;AAElC;AACA;AACA;AACA;AACA;AACA,MAAMF,KAAK,CAAC;EACVG,WAAWA,CAACC,WAAW,EAAE;IACvB,IAAI,CAACA,WAAW,GAAGA,WAAW;EAChC;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGEC,IAAIA,CAACC,IAAI,EAAE;IACT,OAAO,CAAC,CAAC,EAAEL,OAAO,CAACM,OAAO,EAAE,IAAI,CAACH,WAAW,EAAE;MAC5CI,MAAM,EAAE,MAAM;MACdC,GAAG,EAAG,4BAA2B;MACjCH;IACF,CAAC,CAAC;EACJ;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGEI,aAAaA,CAACJ,IAAI,EAAE;IAClB,OAAO,CAAC,CAAC,EAAEL,OAAO,CAACM,OAAO,EAAE,IAAI,CAACH,WAAW,EAAE;MAC5CI,MAAM,EAAE,MAAM;MACdC,GAAG,EAAG,uCAAsC;MAC5CH;IACF,CAAC,CAAC;EACJ;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGEK,MAAMA,CAACL,IAAI,EAAE;IACX,OAAO,CAAC,CAAC,EAAEL,OAAO,CAACM,OAAO,EAAE,IAAI,CAACH,WAAW,EAAE;MAC5CI,MAAM,EAAE,MAAM;MACdC,GAAG,EAAG,8BAA6B;MACnCH;IACF,CAAC,CAAC;EACJ;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;EAGEM,YAAYA,CAACN,IAAI,EAAE;IACjB,OAAO,CAAC,CAAC,EAAEL,OAAO,CAACM,OAAO,EAAE,IAAI,CAACH,WAAW,EAAE;MAC5CI,MAAM,EAAE,MAAM;MACdC,GAAG,EAAG,qCAAoC;MAC1CH;IACF,CAAC,CAAC;EACJ;AAEF;AAEAR,OAAO,CAACE,KAAK,GAAGA,KAAK"},"metadata":{},"sourceType":"script","externalDependencies":[]}